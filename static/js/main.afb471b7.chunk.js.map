{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Container/Container.tsx","components/Section/Section.tsx","components/Statistics/Statistics.tsx","components/FeedbackOptions/FeedbackOptions.tsx","components/Notification/Notification.tsx","App.tsx","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","basics","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","initialState","App","useState","stats","setStats","countTotalFeedback","Object","values","reduce","acc","value","keys","event","textContent","target","prState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,gCAAgC,KAAO,4DAA4D,QAAU,+DAA+D,IAAM,6D,iBCA5PD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,+B,8ICcZC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,gBCA/BI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAOI,QAAvB,UACE,oBAAIL,UAAWC,IAAOG,MAAtB,SAA8BA,IAC7BL,MAILI,EAAQG,aAAe,CACrBF,MAAO,GACPL,SAAU,MAQGI,Q,gBCoBAI,EAlCI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,mBALiB,OAOjB,qBAAIZ,UAAWC,IAAOY,OAAtB,UACE,wCACQ,+BAAOL,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,SAEhB,qDACqB,iCAAOC,IAAP,c,gBCFVE,EAtBS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,gBAClC,OACE,qBAAKhB,UAAWC,IAAOC,UAAvB,SACGa,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACElB,UAAWC,IAAOiB,GAClBC,KAAK,SAELC,QAASJ,EAJX,SAMGE,GAHIA,S,iBCAAG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGtB,UAAWC,IAAOY,OAArB,SAA8BS,KCG1BC,EAAuB,CAC3Bf,KAAM,EACNC,QAAS,EACTC,IAAK,GAwDQc,EArDH,WAAO,IAAD,EACUC,mBAASF,GADnB,mBACTG,EADS,KACFC,EADE,KAGRnB,EAAuBkB,EAAvBlB,KAAMC,EAAiBiB,EAAjBjB,QAASC,EAAQgB,EAARhB,IAiBjBkB,EAAqB,WAEzB,OADeC,OAAOC,OAAOJ,GACfK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAMpD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEW,QAASc,OAAOK,KAAKR,GACrBV,gBA5BoB,SAC1BmB,GAKI,IAEIC,EADWD,EAAXE,OACAD,YACRT,GAAS,SAAAW,GAAO,kCACXA,GADW,kBAEbF,EAAcV,EAAMU,GAAe,YAoBpC,cAAC,EAAD,CAAShC,MAAM,aAAf,SACGwB,IACC,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,EACPhB,mBAlB8B,kBACtC2B,KAAKC,MAAe,IAAPhC,EAAcoB,IAAwB,IAAM,MAoBnD,cAAC,EAAD,CAAcN,QAAQ,4B,YCzDhCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.afb471b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3xkuY\",\"title\":\"Section_title__2aHJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1-2xl\",\"button\":\"FeedbackOptions_button__2lnwb\",\"good\":\"FeedbackOptions_good__2lgQQ FeedbackOptions_button__2lnwb\",\"neutral\":\"FeedbackOptions_neutral__3HEPT FeedbackOptions_button__2lnwb\",\"bad\":\"FeedbackOptions_bad__32Jtv FeedbackOptions_button__2lnwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__33kE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basics\":\"Statistics_basics__63-eK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basics\":\"Notification_basics__18Rxk\"};","// import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\ninterface IContainer {\n  children?: React.ReactNode;\n}\n\nconst Container = ({ children }: IContainer) => (\n  <div className={styles.container}>{children}</div>\n);\n\n// Container.propTypes = {\n//   children: PropTypes.node,\n// };\n\nexport default Container;\n","// import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\ninterface ISection {\n  title?: string;\n  children?: React.ReactNode;\n}\n\nconst Section = ({ title, children }: ISection) => (\n  <div className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: null,\n};\n\n// Section.propTypes = {\n//   title: PropTypes.string,\n//   children: PropTypes.node,\n// };\n\nexport default Section;\n","// import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\ninterface IStats {\n  good?: number;\n  neutral?: number;\n  bad?: number;\n  total: Function;\n  positivePercentage: Function;\n}\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}: IStats) => (\n  <ul className={styles.basics}>\n    <li>\n      Good: <span>{good}</span>\n    </li>\n    <li>\n      Neutral: <span>{neutral}</span>\n    </li>\n    <li>\n      Bad: <span>{bad}</span>\n    </li>\n    <li>\n      Total: <span>{total()}</span>\n    </li>\n    <li>\n      Positive feedback: <span>{positivePercentage()}%</span>\n    </li>\n  </ul>\n);\n\n// Statistics.propTypes = {\n//   good: PropTypes.number.isRequired,\n//   neutral: PropTypes.number.isRequired,\n//   bad: PropTypes.number.isRequired,\n//   total: PropTypes.func.isRequired,\n//   positivePercentage: PropTypes.func.isRequired,\n// };\n\nexport default Statistics;\n","// import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\ninterface IFeedback {\n  options: string[];\n  onLeaveFeedback: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }: IFeedback) => {\n  return (\n    <div className={styles.container}>\n      {options.map(option => (\n        <button\n          className={styles[option]}\n          type=\"button\"\n          key={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\n// FeedbackOptions.propTypes = {\n//   options: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   onLeaveFeedback: PropTypes.func.isRequired,\n// };\n\nexport default FeedbackOptions;\n","// import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\ninterface INotification {\n  message?: string;\n}\n\nconst Notification = ({ message }: INotification) => (\n  <p className={styles.basics}>{message}</p>\n);\n\n// Notification.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };\n\nexport default Notification;\n","import { useState } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport Feedbackoptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\ninterface Istats {\n  [n: string]: number;\n}\n\nconst initialState: Istats = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nconst App = () => {\n  const [stats, setStats] = useState(initialState);\n\n  const { good, neutral, bad } = stats;\n\n  const handleIncrementStat = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent> & {\n      target?: HTMLButtonElement & {\n        textContent?: string;\n      };\n    },\n  ) => {\n    const { target } = event;\n    const { textContent } = target;\n    setStats(prState => ({\n      ...prState,\n      [textContent]: stats[textContent] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    const values = Object.values(stats);\n    return values.reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.round(((good * 100) / countTotalFeedback()) * 10) / 10;\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <Feedbackoptions\n          options={Object.keys(stats)}\n          onLeaveFeedback={handleIncrementStat}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}